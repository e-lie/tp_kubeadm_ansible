- hosts: kluster_cluster
  become: yes
  tasks:
    - name: ensure open-iscsi is present for longhorn to work
      apt:
        name: open-iscsi
        state: present
        # update-cache: yes

- hosts: localhost

  vars:
    kubeconfig_path: "~/.kube/kluster.kubeconfig"

###########################################
#     UPDATE METALLB IPS BELOW !!!        #
###########################################

  tasks:
    # - name: ensure python3-kubernetes lib is installed on the control plane machine
    #   apt:
    #     name: python3-kubernetes
    #     state: present
    #     # update-cache: yes

########### METALLB

    - name: add metallb chart repo
      kubernetes.core.helm_repository:
        name: metallb
        repo_url: "https://metallb.github.io/metallb"
        force_update: true

    - name: install metallb chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: metallb
        chart_ref: metallb/metallb
        chart_version: 0.13.10
        release_namespace: metallb-system
        create_namespace: true
        values: {}

    - name: create metallb IPAddressPool
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        definition:
          apiVersion: metallb.io/v1beta1
          kind: IPAddressPool
          metadata:
            name: freebox-ips
            namespace: metallb-system
          spec:
            addresses:
            - 192.168.1.152/32

    # - name: create metallb L2advertisment
    #   kubernetes.core.k8s:
    #     kubeconfig: ~/.kube/kluster.kubeconfig
    #     definition:

########### INGRESS NGINX
  
    - name: add ingress nginx chart repo
      kubernetes.core.helm_repository:
        name: ingress-nginx
        repo_url: "https://kubernetes.github.io/ingress-nginx"
        force_update: true
    
    - name: install ingress nginx chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        chart_version: 4.7.1
        release_namespace: ingress-nginx
        create_namespace: true
        values:
          replicas: 2

########### LONGHORN

    - name: add longhorn chart repo
      kubernetes.core.helm_repository:
        name: longhorn
        repo_url: "https://charts.longhorn.io"
        force_update: true
    
    - name: install longhorn chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: longhorn
        chart_ref: longhorn/longhorn
        chart_version: 1.6.0
        release_namespace: longhorn-system
        create_namespace: true
        values: {}

########### CERTMANAGER

    - name: add cert-manager chart repo
      kubernetes.core.helm_repository:
        name: cert-manager
        repo_url: "https://charts.jetstack.io"
        force_update: true
    
    - name: install cert-manager chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: cert-manager
        chart_ref: cert-manager/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        chart_version: 1.12.2
        values:
          installCRDs: true

    - name: create letsencrypt selfsigned Cluster Issuer
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: selfsigned
          spec:
            selfSigned: {}

    # - name: create letsencrypt prod Cluster Issuer
    #   kubernetes.core.k8s:
    #     kubeconfig: "{{ kubeconfig_path }}"
    #     definition:
    #       apiVersion: cert-manager.io/v1
    #       kind: ClusterIssuer
    #       metadata:
    #         name: letsencrypt-prod
    #       spec:
    #         acme:
    #           # You must replace this email address with your own.
    #           # Let's Encrypt will use this to contact you about expiring
    #           # certificates, and issues related to your account.
    #           email: cto@doxxxx.fr
    #           server: https://acme-v02.api.letsencrypt.org/directory
    #           privateKeySecretRef:
    #             # Secret resource that will be used to store the account's private key.
    #             name: letsencrypt-prod-account-key
    #           # Add a single challenge solver, HTTP01 using nginx
    #           solvers:
    #           - http01:
    #               ingress:
    #                 class: nginx
    
########### ARGOCD

    - name: add argo chart repo
      kubernetes.core.helm_repository:
        name: argo
        repo_url: "https://argoproj.github.io/argo-helm"
        force_update: true
    
    - name: install argo-cd chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: argo-cd
        chart_ref: argo/argo-cd
        release_namespace: argocd
        create_namespace: true
        chart_version: 6.7.3
        values:
          server:
            ingress:
              enabled: true
              hosts:
                - argocd.kluster.dopl.uk
              https: true
              tls:
                - secretName: argocd-secret
                  hosts: 
                    - argocd.kluster.dopl.uk
              annotations:
                cert-manager.io/cluster-issuer: selfsigned
                kubernetes.io/ingress.class: nginx
                # kubernetes.io/tls-acme: "true"
                # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
                # If you encounter a redirect loop or are getting a 307 response code 
                # then you need to force the nginx ingress to connect to the backend using HTTPS.
                #
                nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    
########### KUBE PROMETHEUS STACK

    - name: add kube prometheus chart repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"
        force_update: true

    - name: install kube prometheus chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: kube-prometheus
        chart_ref: prometheus-community/kube-prometheus-stack
        chart_version: 57.0.3
        release_namespace: kube-prometheus
        create_namespace: true
        values:
          ingress:
            enabled: true
            hosts:
              - prometheus.kluster.dopl.uk
            # tls:
            #   - secretName: prometheus-tls-secret
            #     hosts: 
            #       - prometheus.kluster.dopl.uk
            annotations:
              cert-manager.io/cluster-issuer: selfsigned
              kubernetes.io/ingress.class: nginx
          grafana:
            ingress:
              enabled: true
              hosts:
                - grafana.kluster.dopl.uk
              tls:
                - secretName: grafana-tls-secret 
                  hosts: 
                    - grafana.kluster.dopl.uk
              annotations:
                cert-manager.io/cluster-issuer: selfsigned
                kubernetes.io/ingress.class: nginx
