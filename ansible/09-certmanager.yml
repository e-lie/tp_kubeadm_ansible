- hosts: localhost

  vars:
    kubeconfig_path: "~/.kube/inkus.kubeconfig"

  tasks:

########### CERTMANAGER

    - name: add cert-manager chart repo
      kubernetes.core.helm_repository:
        name: cert-manager
        repo_url: "https://charts.jetstack.io"
        force_update: true
    
    - name: install cert-manager chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: cert-manager
        chart_ref: cert-manager/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        chart_version: 1.12.2
        values:
          installCRDs: true

    - name: create letsencrypt selfsigned Cluster Issuer
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: selfsigned
          spec:
            selfSigned: {}

    # - name: create letsencrypt prod Cluster Issuer
    #   kubernetes.core.k8s:
    #     kubeconfig: "{{ kubeconfig_path }}"
    #     definition:
    #       apiVersion: cert-manager.io/v1
    #       kind: ClusterIssuer
    #       metadata:
    #         name: letsencrypt-prod
    #       spec:
    #         acme:
    #           # You must replace this email address with your own.
    #           # Let's Encrypt will use this to contact you about expiring
    #           # certificates, and issues related to your account.
    #           email: cto@doxxxx.fr
    #           server: https://acme-v02.api.letsencrypt.org/directory
    #           privateKeySecretRef:
    #             # Secret resource that will be used to store the account's private key.
    #             name: letsencrypt-prod-account-key
    #           # Add a single challenge solver, HTTP01 using nginx
    #           solvers:
    #           - http01:
    #               ingress:
    #                 class: nginx